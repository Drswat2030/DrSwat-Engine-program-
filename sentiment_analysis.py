"""
DrSwat Engine - ุชุญููู ุงููุดุงุนุฑ
ููู Python ูุชุญููู ุงููุดุงุนุฑ ูู ุงููุตูุต ุงูุนุฑุจูุฉ
"""

from flask import Flask, request, jsonify
import re
import json

# ูุงุฆูุฉ ุงููููุงุช ุงูุฅูุฌุงุจูุฉ ูุงูุณูุจูุฉ
positive_words = [
    "ูุฌุงุญ", "ุฃูู", "ููุฉ", "ูุฑุญ", "ุชูุฏู", "ุณูุงู", "ุญูุงุฉ", "ุณุนุงุฏุฉ", "ุฅูุฌุงุจูุฉ", 
    "ุชูุงุคู", "ุตุญุฉ", "ุนุงููุฉ", "ุญุจ", "ุฎูุฑ", "ุจุฑูุฉ", "ูุนูุฉ", "ุดูุฑ", "ุฑุถุง", 
    "ุณุฑูุฑ", "ุจูุฌุฉ", "ุงูุชุตุงุฑ", "ุฅูุฌุงุฒ", "ุชุทูุฑ", "ุชุญุณู", "ุซูุฉ", "ุนุฒููุฉ"
]

negative_words = [
    "ุฎูู", "ุถุนู", "ุญุฒู", "ุชุนุจ", "ูุฃุณ", "ููู", "ูุญุฏุฉ", "ุบุถุจ", "ุฅุญุจุงุท", 
    "ูุดู", "ุฃูู", "ูุฑุถ", "ุญุฑูุงู", "ุธูู", "ุฎุณุงุฑุฉ", "ูุฏู", "ุฃุณู", "ุนุฌุฒ", 
    "ุตุนูุจุฉ", "ูุดููุฉ", "ุตุฑุงุน", "ุชูุชุฑ", "ุถุบุท", "ุฅุฑูุงู", "ุงูุชุฆุงุจ", "ูุณูุฉ"
]

# ุฅูุดุงุก ุชุทุจูู Flask
app = Flask(__name__)

@app.route('/api/analyze', methods=['POST'])
def analyze_sentiment():
    """
    ุชุญููู ุงููุดุงุนุฑ ูู ุงููุต ุงููุฑุณู
    """
    try:
        # ุงุณุชูุงู ุงูุจูุงูุงุช
        data = request.get_json()
        if not data or 'text' not in data:
            return jsonify({'error': 'ุงููุต ูุทููุจ'}), 400
        
        text = data['text']
        
        # ุชุญููู ุงููุต
        result = analyze(text)
        
        return jsonify(result)
    
    except Exception as e:
        return jsonify({'error': str(e)}), 500

def analyze(text):
    """
    ุชุญููู ุงููุดุงุนุฑ ูู ุงููุต
    
    Args:
        text (str): ุงููุต ุงููุฑุงุฏ ุชุญูููู
        
    Returns:
        dict: ูุชุงุฆุฌ ุงูุชุญููู
    """
    # ุชูุธูู ุงููุต
    text = clean_text(text)
    
    # ุชูุณูู ุงููุต ุฅูู ูููุงุช
    words = text.split()
    word_count = len(words)
    
    # ุญุณุงุจ ุนุฏุฏ ุงููููุงุช ุงูุฅูุฌุงุจูุฉ ูุงูุณูุจูุฉ
    positive_count = sum(1 for word in words if word in positive_words)
    negative_count = sum(1 for word in words if word in negative_words)
    
    # ุญุณุงุจ ูุณุจุฉ ุงูุฅูุฌุงุจูุฉ
    total_sentiment_words = positive_count + negative_count
    positive_percentage = 0
    
    if total_sentiment_words > 0:
        positive_percentage = round((positive_count / total_sentiment_words) * 100)
    
    # ุชุญุฏูุฏ ุงูุญุงูุฉ ุงูุนุงูุฉ
    overall_mood = "ูุญุงูุฏุฉ"
    mood_emoji = "๐"
    
    if positive_count > negative_count:
        overall_mood = "ุฅูุฌุงุจูุฉ"
        mood_emoji = "๐"
    elif negative_count > positive_count:
        overall_mood = "ุณูุจูุฉ"
        mood_emoji = "๐ข"
    
    # ุฅุนุฏุงุฏ ุงูุงูุชุฑุงุญุงุช
    suggestions = []
    
    if negative_count > positive_count:
        suggestions = [
            "ุฌุฑุจ ุชูุงุฑูู ุงูุชููุณ ุงูุนููู ููุชูุฏุฆุฉ",
            "ุฏููู ุซูุงุซุฉ ุฃุดูุงุก ุฅูุฌุงุจูุฉ ุญุฏุซุช ุงูููู",
            "ุชูุงุตู ูุน ุดุฎุต ุฏุงุนู ููุชุญุฏุซ ุนู ูุดุงุนุฑู"
        ]
    
    # ุฅุนุฏุงุฏ ุงููุชุงุฆุฌ
    result = {
        'word_count': word_count,
        'positive_count': positive_count,
        'negative_count': negative_count,
        'positive_percentage': positive_percentage,
        'overall_mood': overall_mood,
        'mood_emoji': mood_emoji,
        'suggestions': suggestions
    }
    
    return result

def clean_text(text):
    """
    ุชูุธูู ุงููุต ูู ุงูุฑููุฒ ุบูุฑ ุงููุฑุบูุจ ูููุง
    
    Args:
        text (str): ุงููุต ุงููุฑุงุฏ ุชูุธููู
        
    Returns:
        str: ุงููุต ุจุนุฏ ุงูุชูุธูู
    """
    # ุฅุฒุงูุฉ ุนูุงูุงุช ุงูุชุฑููู
    text = re.sub(r'[^\w\s]', ' ', text)
    
    # ุฅุฒุงูุฉ ุงููุณุงูุงุช ุงูุฒุงุฆุฏุฉ
    text = re.sub(r'\s+', ' ', text).strip()
    
    return text

# ุชุดุบูู ุงูุชุทุจูู ุฅุฐุง ุชู ุชูููุฐ ุงูููู ูุจุงุดุฑุฉ
if __name__ == '__main__':
    # ูููู ุชุฌุฑุจุฉ ุงูุชุญููู ูุญููุงู
    sample_text = input("ุฃุฏุฎู ุฌููุฉ ูุชุญููู ุงููุดุงุนุฑ: ")
    result = analyze(sample_text)
    print(json.dumps(result, ensure_ascii=False, indent=2))
    
    # ุชุดุบูู ุฎุงุฏู Flask
    # app.run(host='0.0.0.0', port=5000, debug=True)

